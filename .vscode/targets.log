make all --print-data-base --no-builtin-variables --no-builtin-rules --question
make: *** No rule to make target 'all'.  Stop.

# GNU Make 4.3
# Built for x86_64-redhat-linux-gnu
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Thu Jul 28 00:42:31 2022

# Variables

# environment
GDK_BACKEND = x11
# environment
LC_ALL = C
# environment
NO_AT_BRIDGE = 1
# makefile (from 'Makefile', line 2)
PELICAN = pelican
# environment
GJS_DEBUG_OUTPUT = stderr
# environment
define BASH_FUNC_scl%%
() {  if [ "$1" = "load" -o "$1" = "unload" ]; then
 eval "module $@";
 else
 /usr/bin/scl "$@";
 fi
}
endef
# environment
LC_NUMERIC = da_DK.UTF-8
# environment
VSCODE_CWD = /home/jcemelanda
# environment
WINDOWPATH = 2
# environment
MODULES_CMD = /usr/share/Modules/libexec/modulecmd.tcl
# environment
GDM_LANG = pt_BR.UTF-8
# default
MAKE_COMMAND := make
# environment
define BASH_FUNC_which%%
() {  ( alias;
 eval ${which_declare} ) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot $@
}
endef
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
.VARIABLES := 
# environment
PWD = /home/jcemelanda/Projetos/programeempython.github.io
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
HOSTNAME = fedora
# environment
MAIL = /var/spool/mail/jcemelanda
# environment
STEAM_FRAME_FORCE_CLOSE = 1
# environment
XDG_DATA_DIRS = /home/jcemelanda/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share/:/usr/share/
# environment
QTINC = /usr/lib64/qt-3.3/include
# environment
MODULES_RUN_QUARANTINE = LD_LIBRARY_PATH LD_PRELOAD
# automatic
^D = $(patsubst %/,%,$(dir $^))
# automatic
%F = $(notdir $%)
# environment
VSCODE_CODE_CACHE_PATH = /home/jcemelanda/.config/Code/CachedData/3b889b090b5ad5793f524b5d1d39fda662b96a2a
# environment
LANG = C
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# default
.LOADED := 
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# makefile
MAKEFLAGS = pqrR
# makefile
CURDIR := /home/jcemelanda/Projetos/programeempython.github.io
# environment
define BASH_FUNC_module%%
() {  eval `/usr/bin/tclsh /usr/share/Modules/libexec/modulecmd.tcl bash "$@"`;
 _mlstatus=$?;
 return $_mlstatus
}
endef
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
LESSOPEN = ||/usr/bin/lesspipe.sh %s
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'Makefile', line 26)
PORT = 0
# environment
MFLAGS = -pqrR
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# default
.SHELLFLAGS := -c
# environment
HISTSIZE = 1000
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
XDG_SESSION_DESKTOP = gnome-xorg
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST := Makefile
# automatic
@F = $(notdir $@)
# environment
VSCODE_PID = 51935
# environment
SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS = 0
# environment
XDG_SESSION_TYPE = x11
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
SESSION_MANAGER = local/unix:@/tmp/.ICE-unix/2150,unix/unix:/tmp/.ICE-unix/2150
# automatic
*F = $(notdir $*)
# environment
MANPATH = /usr/share/man:
# environment
MODULEPATH = /etc/scl/modulefiles:/etc/scl/modulefiles:/usr/share/Modules/modulefiles:/etc/modulefiles:/usr/share/modulefiles
# environment
CHROME_DESKTOP = code-url-handler.desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# automatic
<D = $(patsubst %/,%,$(dir $<))
# environment
VSCODE_NLS_CONFIG = {"locale":"pt-br","availableLanguages":{"*":"pt-br"},"_languagePackId":"dc7ba51c4efcfec965eaa07de065afd6.pt-br","_translationsConfigFile":"/home/jcemelanda/.config/Code/clp/dc7ba51c4efcfec965eaa07de065afd6.pt-br/tcf.json","_cacheRoot":"/home/jcemelanda/.config/Code/clp/dc7ba51c4efcfec965eaa07de065afd6.pt-br","_resolvedLanguagePackCoreLocation":"/home/jcemelanda/.config/Code/clp/dc7ba51c4efcfec965eaa07de065afd6.pt-br/3b889b090b5ad5793f524b5d1d39fda662b96a2a","_corruptedFile":"/home/jcemelanda/.config/Code/clp/dc7ba51c4efcfec965eaa07de065afd6.pt-br/corrupted.info","_languagePackSupport":true}
# environment
define BASH_FUNC_ml%%
() {  module ml "$@"
}
endef
# default
MAKE_HOST := x86_64-redhat-linux-gnu
# makefile
SHELL = /bin/sh
# makefile (from 'Makefile', line 19)
RELATIVE = 0
# default
MAKECMDGOALS := all
# environment
XMODIFIERS = @im=ibus
# environment
DOTNET_BUNDLE_EXTRACT_BASE_DIR = /home/jcemelanda/.cache/dotnet_bundle_extract
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# environment
SHLVL = 0
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# environment
PATH = /home/jcemelanda/.local/bin:/home/jcemelanda/bin:/home/jcemelanda/.cargo/bin:/usr/lib64/qt-3.3/bin:/usr/share/Modules/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jcemelanda/.dotnet/tools
# environment
QTDIR = /usr/lib64/qt-3.3
# environment
MOZ_GMP_PATH = /usr/lib64/mozilla/plugins/gmp-gmpopenh264/system-installed
# default
MAKEFILES := 
# environment
MODULESHOME = /usr/share/Modules
# environment
LC_MONETARY = da_DK.UTF-8
# automatic
^F = $(notdir $^)
# environment
LOADEDMODULES = 
# environment
LC_TIME = da_DK.UTF-8
# makefile (from 'Makefile', line 5)
BASEDIR = $(CURDIR)
# environment
INVOCATION_ID = f4ded80952e94a5a93d2e4586fe0660c
# environment
VIRTUALENVWRAPPER_SCRIPT = /usr/bin/virtualenvwrapper.sh
# makefile (from 'Makefile', line 24)
SERVER = "0.0.0.0"
# makefile (from 'Makefile', line 6)
INPUTDIR = $(BASEDIR)/content
# environment
USERNAME = jcemelanda
# makefile (from 'Makefile', line 1)
PY = 
# automatic
?F = $(notdir $?)
# environment
QTLIB = /usr/lib64/qt-3.3/lib
# makefile (from 'Makefile', line 11)
GITHUB_PAGES_BRANCH = main
# environment
XDG_CURRENT_DESKTOP = GNOME
# environment
KDEDIRS = /usr
# automatic
+F = $(notdir $+)
# environment
DESKTOP_SESSION = gnome-xorg
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = GNOME
# 'override' directive
GNUMAKEFLAGS := 
# environment
LOGNAME = jcemelanda
# environment
GIO_LAUNCHED_DESKTOP_FILE = /usr/share/applications/code.desktop
# makefile
.DEFAULT_GOAL := help
# environment
SYSTEMD_EXEC_PID = 2206
# makefile (from 'Makefile', line 3)
PELICANOPTS = 
# environment
HISTCONTROL = ignoredups
# environment
EDITOR = /usr/bin/vim
# environment
DISPLAY = :0
# environment
USER = jcemelanda
# default
MAKE_VERSION := 4.3
# environment
MANAGERPID = 1864
# environment
which_declare = declare -f
# environment
LC_MEASUREMENT = da_DK.UTF-8
# environment
DEBUGINFOD_URLS = https://debuginfod.fedoraproject.org/ 
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 51935
# environment
SSH_AGENT_PID = 2069
# environment
_ = /usr/bin/make
# environment
LC_PAPER = da_DK.UTF-8
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'Makefile', line 7)
OUTPUTDIR = $(BASEDIR)/output
# environment
JOURNAL_STREAM = 8:21089
# environment
XDG_SESSION_CLASS = user
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/jcemelanda
# environment
QT_IM_MODULE = ibus
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-3d86b3d0-1.69.2-main.sock
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# default
SUFFIXES := 
# environment
_VIRTUALENVWRAPPER_API =  mkvirtualenv rmvirtualenv lsvirtualenv showvirtualenv workon add2virtualenv cdsitepackages cdvirtualenv lssitepackages toggleglobalsitepackages cpvirtualenv setvirtualenvproject mkproject cdproject mktmpenv wipeenv allvirtualenv mkvirtualenv rmvirtualenv lsvirtualenv showvirtualenv workon add2virtualenv cdsitepackages cdvirtualenv lssitepackages toggleglobalsitepackages cpvirtualenv setvirtualenvproject mkproject cdproject mktmpenv wipeenv allvirtualenv
# makefile (from 'Makefile', line 14)
DEBUG = 0
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink guile load
# makefile (from 'Makefile', line 8)
CONFFILE = $(BASEDIR)/pelicanconf.py
# environment
XDG_MENU_PREFIX = gnome-
# makefile (from 'Makefile', line 9)
PUBLISHCONF = $(BASEDIR)/publishconf.py
# environment
DOTNET_ROOT = /usr/lib64/dotnet
# environment
GDMSESSION = gnome-xorg
# variable set hash-table stats:
# Load=132/1024=13%, Rehash=0, Collisions=4/171=2%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 40, inode 2121490): 18 files, no impossibilities.

# 18 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

devserver-global:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 69):
 
	$(PELICAN) -lr $(INPUTDIR) -o $(OUTPUTDIR) -s $(CONFFILE) $(PELICANOPTS) -b 0.0.0.0

devserver:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 66):
	"$(PELICAN)" -lr "$(INPUTDIR)" -o "$(OUTPUTDIR)" -s "$(CONFFILE)" $(PELICANOPTS)

html:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 51):
	"$(PELICAN)" "$(INPUTDIR)" -o "$(OUTPUTDIR)" -s "$(CONFFILE)" $(PELICANOPTS)

regenerate:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 57):
	"$(PELICAN)" -r "$(INPUTDIR)" -o "$(OUTPUTDIR)" -s "$(CONFFILE)" $(PELICANOPTS)

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-07-26 02:39:03.871681757
#  File has been updated.
#  Successfully updated.

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 54):
	[ ! -d "$(OUTPUTDIR)" ] || rm -rf "$(OUTPUTDIR)"

serve-global:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 63):
	"$(PELICAN)" -l "$(INPUTDIR)" -o "$(OUTPUTDIR)" -s "$(CONFFILE)" $(PELICANOPTS) -b $(SERVER)

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
all:
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.

publish:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 72):
	"$(PELICAN)" "$(INPUTDIR)" -o "$(OUTPUTDIR)" -s "$(PUBLISHCONF)" $(PELICANOPTS)

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 33):
	@echo 'Makefile for a pelican Web site                                           '
	@echo '                                                                          '
	@echo 'Usage:                                                                    '
	@echo '   make html                           (re)generate the web site          '
	@echo '   make clean                          remove the generated files         '
	@echo '   make regenerate                     regenerate files upon modification '
	@echo '   make publish                        generate using production settings '
	@echo '   make serve [PORT=8000]              serve site at http://localhost:8000'
	@echo '   make serve-global [SERVER=0.0.0.0]  serve (as root) to $(SERVER):80    '
	@echo '   make devserver [PORT=8000]          serve and regenerate together      '
	@echo '   make devserver-global               regenerate and serve on 0.0.0.0    '
	@echo '   make github                         upload the web site via gh-pages   '
	@echo '                                                                          '
	@echo 'Set the DEBUG variable to 1 to enable debugging, e.g. make DEBUG=1 html   '
	@echo 'Set the RELATIVE variable to 1 to enable relative urls                    '
	@echo '                                                                          '

github: publish
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 75):
	ghp-import -m "[skip ci] Generate Pelican site" -b $(GITHUB_PAGES_BRANCH) "$(OUTPUTDIR)"
	git push origin $(GITHUB_PAGES_BRANCH)

serve:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 60):
	"$(PELICAN)" -l "$(INPUTDIR)" -o "$(OUTPUTDIR)" -s "$(CONFFILE)" $(PELICANOPTS)

.PHONY: html help clean regenerate serve serve-global devserver publish github
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=15/1024=1%, Rehash=0, Collisions=0/35=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 34 / storage = 325 B / avg = 9 B
# current buf: size = 8162 B / used = 325 B / count = 34 / avg = 9 B

# strcache performance: lookups = 59 / hit rate = 42%
# hash-table stats:
# Load=34/8192=0%, Rehash=0, Collisions=0/59=0%
# Finished Make data base on Thu Jul 28 00:42:31 2022

 
