<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Programe em Python - Tutoriais</title><link href="http://programeempython.com.br/" rel="alternate"></link><link href="http://programeempython.com.br/feeds/tutoriais.atom.xml" rel="self"></link><id>http://programeempython.com.br/</id><updated>2022-08-02T22:06:00+02:00</updated><entry><title>Python 101 - Parte 4 - Estruturas Condicionais em Python, o Retorno</title><link href="http://programeempython.com.br/python-101-parte-4.html" rel="alternate"></link><published>2022-08-02T22:06:00+02:00</published><updated>2022-08-02T22:06:00+02:00</updated><author><name>Julio Melanda</name></author><id>tag:programeempython.com.br,2022-08-02:/python-101-parte-4.html</id><summary type="html">&lt;p&gt;Continuando o artigo sobre Estruturas Condicionais em Python, veremos agora algumas outras fomas de usar a constru&amp;ccedil;&amp;atilde;o &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se voc&amp;ecirc; ainda n&amp;atilde;o viu o post anterior, veja aqui a introdu&amp;ccedil;&amp;atilde;o aos &lt;a href="({filename}/Tutoriais/python101.3.md)"&gt;Condicionais em&amp;nbsp;Python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Muitas vezes, n&amp;atilde;o &amp;eacute; poss&amp;iacute;vel resolver um problema computacional simplesmente com um if/else. Ent&amp;atilde;o …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Continuando o artigo sobre Estruturas Condicionais em Python, veremos agora algumas outras fomas de usar a constru&amp;ccedil;&amp;atilde;o &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Se voc&amp;ecirc; ainda n&amp;atilde;o viu o post anterior, veja aqui a introdu&amp;ccedil;&amp;atilde;o aos &lt;a href="({filename}/Tutoriais/python101.3.md)"&gt;Condicionais em&amp;nbsp;Python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Muitas vezes, n&amp;atilde;o &amp;eacute; poss&amp;iacute;vel resolver um problema computacional simplesmente com um if/else. Ent&amp;atilde;o, usamos v&amp;aacute;rios conjuntos de if/else aninhados (um dentro do&amp;nbsp;outro)&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;table class="highlight not-prose table"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;caminho&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;caminho&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Volte para a posicao inicial"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;caminho&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Siga em frente"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;caminho&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Abaixe a cabeca"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;caminho&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Voc&amp;ecirc; caiu no buraco"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Opcao invalida"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Mas, d&amp;aacute; pra perceber que, se voc&amp;ecirc; tiver uma estrutura muito grade de condi&amp;ccedil;&amp;otilde;es, seu c&amp;oacute;digo vai ficar bem bagun&amp;ccedil;ado&amp;hellip; imagina trinta &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt; aninhados dessa forma? N&amp;atilde;o&amp;nbsp;d&amp;aacute;!&lt;/p&gt;
&lt;p&gt;Ent&amp;atilde;o, pra resolver este problema, temos a constru&amp;ccedil;&amp;atilde;o &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;elif&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt;. O &lt;code&gt;elif&lt;/code&gt; faz o papel das sequ&amp;ecirc;ncias de &lt;code&gt;else&lt;/code&gt; que cont&amp;eacute;m &lt;code&gt;if&lt;/code&gt;. Veja como o c&amp;oacute;digo fica muito mais leg&amp;iacute;vel e&amp;nbsp;organizado!&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;table class="highlight not-prose table"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"d &amp;eacute; positivo"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"d &amp;eacute; negativo"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"d &amp;eacute; nulo"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Voc&amp;ecirc; pode ter quantos &lt;code&gt;elif&lt;/code&gt; forem necess&amp;aacute;rios entre o &lt;code&gt;if&lt;/code&gt; e o &lt;code&gt;else&lt;/code&gt;. Veja este&amp;nbsp;exemplo:&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;table class="highlight not-prose table"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;opcao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;opcao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"O valor escolhido foi 0"&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;opcao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"O valor escolhido foi 1"&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;opcao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"O valor escolhido foi 2"&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;opcao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"O valor escolhido foi 3"&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"O valor escolhido n&amp;atilde;o &amp;eacute; v&amp;aacute;lido"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;O c&amp;oacute;digo continua organizado e leg&amp;iacute;vel, ajudando no entendimento do&amp;nbsp;programa!&lt;/p&gt;
&lt;p&gt;Provavelmente, neste ponto, as pessoas que conhecem C, C++, java ou algumas outras linguagens devem estar se perguntando: Mas cad&amp;ecirc; o&amp;nbsp;switch?&lt;/p&gt;
&lt;p&gt;Na realidade, python n&amp;atilde;o tem um switch como temos em outras linguagens, sendo que sua fun&amp;ccedil;&amp;atilde;o &amp;eacute; muito bem cumprida pelas estruturas &amp;lsquo;if&amp;rsquo;/&amp;rsquo;elif&amp;rsquo;/&amp;rsquo;else&amp;rsquo;. Estas estruturas ainda tem vantagens sobre algumas implementa&amp;ccedil;&amp;otilde;es do switch que por exemplo somente fazem compara&amp;ccedil;&amp;otilde;es de inteiros e caracteres&amp;nbsp;&amp;uacute;nicos.&lt;/p&gt;
&lt;p&gt;&amp;Eacute; poss&amp;iacute;vel simular um switch de forma muito eficiente e elegnte no Python, mas isto ficar&amp;aacute; para um pr&amp;oacute;ximo post com conte&amp;uacute;do mais&amp;nbsp;avan&amp;ccedil;ado.&lt;/p&gt;
&lt;p&gt;Vamos ficando por&amp;nbsp;aqui.&lt;/p&gt;
&lt;p&gt;No pr&amp;oacute;ximo t&amp;oacute;pico, falaremos de Estruturas de&amp;nbsp;Repeti&amp;ccedil;&amp;atilde;o!&lt;/p&gt;
&lt;p&gt;&amp;atilde;o deixe de enviar d&amp;uacute;vidas e opini&amp;otilde;es nos coment&amp;aacute;rios&amp;nbsp;abaixo!&lt;/p&gt;
&lt;p&gt;At&amp;eacute; o pr&amp;oacute;ximo&amp;nbsp;post!&lt;/p&gt;</content><category term="Tutoriais"></category><category term="Tutorial"></category><category term="Python 101"></category></entry><entry><title>Python 101 - Parte 3 - Estruturas Condicionais em Python</title><link href="http://programeempython.com.br/python-101-parte-3-condicionais.html" rel="alternate"></link><published>2022-08-01T23:06:00+02:00</published><updated>2022-08-01T23:06:00+02:00</updated><author><name>Julio Melanda</name></author><id>tag:programeempython.com.br,2022-08-01:/python-101-parte-3-condicionais.html</id><summary type="html">&lt;p&gt;Ol&amp;aacute;!&lt;/p&gt;
&lt;p&gt;Continuando nossa s&amp;eacute;rie introdut&amp;oacute;ria sobre Python, vamos falar um pouco sobre as estruturas&amp;nbsp;condicionais.&lt;/p&gt;
&lt;p&gt;Se voc&amp;ecirc; n&amp;atilde;o viu o post anterior, veja aqui para entender os &lt;a href="http://programeempython.com.br/python-101-parte-1.html"&gt;Blocos de C&amp;oacute;digo em&amp;nbsp;Python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As estruturas condicionais s&amp;atilde;o essenciais na programa&amp;ccedil;&amp;atilde;o. Sem elas, os programas seriam chatos, mon&amp;oacute;tonos, e nunca teriam a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ol&amp;aacute;!&lt;/p&gt;
&lt;p&gt;Continuando nossa s&amp;eacute;rie introdut&amp;oacute;ria sobre Python, vamos falar um pouco sobre as estruturas&amp;nbsp;condicionais.&lt;/p&gt;
&lt;p&gt;Se voc&amp;ecirc; n&amp;atilde;o viu o post anterior, veja aqui para entender os &lt;a href="http://programeempython.com.br/python-101-parte-1.html"&gt;Blocos de C&amp;oacute;digo em&amp;nbsp;Python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As estruturas condicionais s&amp;atilde;o essenciais na programa&amp;ccedil;&amp;atilde;o. Sem elas, os programas seriam chatos, mon&amp;oacute;tonos, e nunca teriam a capacidade toda que temos&amp;nbsp;atualmente.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sem estruturas condicionais n&amp;atilde;o haveria jogos&amp;nbsp;eletr&amp;ocirc;nicos!!!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ent&amp;atilde;o, vejamos como o Python implementa suas estruturas&amp;nbsp;condicionais.&lt;/p&gt;
&lt;p&gt;A principal estrutura condicional do Python (e mais usada tamb&amp;eacute;m) &amp;eacute; a constru&amp;ccedil;&amp;atilde;o &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt; ou sua varia&amp;ccedil;&amp;atilde;o &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;elif&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;if&lt;/code&gt;, traduzindo do ingl&amp;ecirc;s quer dizer se, e else sen&amp;atilde;o, logo, estas constru&amp;ccedil;&amp;otilde;es nos permitem orientar a execu&amp;ccedil;&amp;atilde;o de um trecho de c&amp;oacute;digo. Se isso, faz aquilo, sen&amp;atilde;o, faz aquilo&amp;nbsp;outro&amp;hellip;&lt;/p&gt;
&lt;p&gt;Veja abaixo um exemplo de utiliza&amp;ccedil;&amp;atilde;o do&amp;nbsp;if/else:&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;table class="highlight not-prose table"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"x &amp;eacute; par"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"x &amp;eacute; impar"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;Este c&amp;oacute;digo analisa o valor da vari&amp;aacute;vel &lt;code&gt;x&lt;/code&gt;. Se &lt;code&gt;x % 2&lt;/code&gt; (o resto da divis&amp;atilde;o de &lt;code&gt;x&lt;/code&gt; por &lt;code&gt;2&lt;/code&gt;) for igual a zero, ent&amp;atilde;o o n&amp;uacute;mero &amp;eacute; par, sen&amp;atilde;o, &amp;eacute; impar. Veremos mais fun&amp;ccedil;&amp;otilde;es matem&amp;aacute;ticas em posts&amp;nbsp;futuros.&lt;/p&gt;
&lt;p&gt;Ao digitar estes comando no terminal, ficaria&amp;nbsp;assim:&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;:
...     &lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;x &amp;eacute; par&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
... &lt;span class="k"&gt;else&lt;/span&gt;:
...     &lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;x &amp;eacute; impar&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; 
...
&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt; &lt;span class="nv"&gt;impar&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Recapitulando o que foi dito no texto sobre blocos de c&amp;oacute;digo em Python, quando temos um bloco identado logo abaixo de um comando terminado em :, temos um bloco que est&amp;aacute; diretamente relacionado a este&amp;nbsp;comando.&lt;/p&gt;
&lt;p&gt;No exemplo, temos o comando &lt;code&gt;if x%2==0:&lt;/code&gt; e logo abaixo o print &lt;code&gt;"x &amp;eacute; par"&lt;/code&gt; identado. Isto quer dizer que o c&amp;oacute;digo identado (&lt;code&gt;print("x &amp;eacute; par")&lt;/code&gt;) somente ser&amp;aacute; executado se o resto da divis&amp;atilde;o de &lt;code&gt;x&lt;/code&gt; por &lt;code&gt;2&lt;/code&gt; for&amp;nbsp;zero.&lt;/p&gt;
&lt;p&gt;Caso este resultado seja diferente de zero, x n&amp;atilde;o &amp;eacute; par, e o interpretador encontra o comando &lt;code&gt;else:&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Logo abaxo deste comando, temos &lt;code&gt;print("x &amp;eacute; impar")&lt;/code&gt; que est&amp;aacute; identado, mostrando ao interpretador que este &amp;eacute; o comando que deve ser executado caso a compara&amp;ccedil;&amp;atilde;o dentro do &lt;code&gt;if&lt;/code&gt; seja&amp;nbsp;falsa.&lt;/p&gt;
&lt;p&gt;N&amp;atilde;o vamos esticar o assunto. Por enquanto paramos por aqui, mas espere que logo teremos a continua&amp;ccedil;&amp;atilde;o pra&amp;nbsp;voc&amp;ecirc;!&lt;/p&gt;
&lt;p&gt;N&amp;atilde;o deixe de enviar d&amp;uacute;vidas e opini&amp;otilde;es nos coment&amp;aacute;rios&amp;nbsp;abaixo!&lt;/p&gt;
&lt;p&gt;At&amp;eacute; o pr&amp;oacute;ximo&amp;nbsp;post!&lt;/p&gt;</content><category term="Tutoriais"></category><category term="Tutorial"></category><category term="Python 101"></category><category term="Condicionais"></category></entry><entry><title>Tutorial de Pelican com Github Pages e CircleCI - 1</title><link href="http://programeempython.com.br/tutorial-pelican.html" rel="alternate"></link><published>2022-07-31T22:03:00+02:00</published><updated>2022-07-31T22:03:00+02:00</updated><author><name>Julio Melanda</name></author><id>tag:programeempython.com.br,2022-07-31:/tutorial-pelican.html</id><summary type="html">&lt;p&gt;Como prometido, vamos abordar como criei meu blog com Pelican, Github Pages e CircleCI num tutorial. Como é bastante conteúdo vamos dividir em partes e aqui veremos uma introdução ao&amp;nbsp;Pelican.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ol&amp;aacute;!&lt;/p&gt;
&lt;p&gt;Como prometido, vamos abordar como criei meu blog com Pelican, Github Pages e CircleCI num tutorial. Como &amp;eacute; bastante conte&amp;uacute;do vamos dividir em partes e aqui veremos uma introdu&amp;ccedil;&amp;atilde;o ao&amp;nbsp;Pelican.&lt;/p&gt;
&lt;p&gt;Recapitulando, Pelican &amp;eacute; um gerador de site est&amp;aacute;tico, ou seja, gera um site est&amp;aacute;tico em &lt;span class="caps"&gt;HTML&lt;/span&gt; baseado em conte&amp;uacute;dos escritos numa linguagem de Markup, geralmente rich text ou markdown. Pelican gera as postagens usando Jinja2 como biblioteca de template. Assim, se voc&amp;ecirc; tem alguma familiaridade com jinja ou Django, que tem uma biblioteca de templates semelhante, voc&amp;ecirc; n&amp;atilde;o vai ter dificuldades em por exemplo criar ou customizar temas para o&amp;nbsp;Pelican.&lt;/p&gt;
&lt;p&gt;Primeiro, para criar um site com Pelican, vamos&amp;nbsp;instal&amp;aacute;-lo.&lt;/p&gt;
&lt;p&gt;Pode ser num ambiente virtual ou diretamente na sua instala&amp;ccedil;&amp;atilde;o padr&amp;atilde;o do python. No terminal,&amp;nbsp;execute:&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Isto vai instalar o Pelican com suporte a Markdown, que &amp;eacute; minha linguagem de markup&amp;nbsp;preferida.&lt;/p&gt;
&lt;p&gt;Finalizando sua instala&amp;ccedil;&amp;atilde;o, vamos criar um site&amp;nbsp;Pelican.&lt;/p&gt;
&lt;p&gt;Crie uma pasta onde ficar&amp;aacute; seu site, para executarmos comandos l&amp;aacute; de dentro. No Linux, seria algo&amp;nbsp;assim:&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir ~/projetos/meu_blog/ -p
cd ~/projetos/meu_blog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ent&amp;atilde;o, agora vamos executar um comando do Pelican que vai iniciar nosso&amp;nbsp;blog.&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pelican-quickstart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Este script vai te perguntar diversas&amp;nbsp;coisas. &lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Where&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;.&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;What&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Who&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;What&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;language&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;specify&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;prefix&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pagination&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;What&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;zone&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;America/Sao_Paulo&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;generate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Makefile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;automate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;generation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;publishing&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vamos nos manter no mais simples poss&amp;iacute;vel para este tutorial introdut&amp;oacute;rio, ent&amp;atilde;o&amp;nbsp;responda&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Somente&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;digite&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n n-Quoted"&gt;`Enter`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Teste&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Teste&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Somente&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;digite&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n n-Quoted"&gt;`Enter`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Somente&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;digite&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n n-Quoted"&gt;`Enter`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Assim, o Pelican vai criar um projeto bastante simplificado que podemos usar para iniciar nosso blog. Num pr&amp;oacute;ximo post, vamos executar novamente este comando para criar realmente o blog que vamos publicar, mas aqui como &amp;eacute; somente para introduzir o Pelican vamos manter a&amp;nbsp;simplicidade.&lt;/p&gt;
&lt;p&gt;Agora vamos criar nosso primeiro post exemplo. Veja que o Pelican criou uma estrutura de arquivos assim na pasta do&amp;nbsp;blog:&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;content/
pelicanconf.py
publishconf.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dentro da pasta content, crie um arquivo, vamos cham&amp;aacute;-lo de teste.md (Muito criativo :p). Nele insira o seguinte&amp;nbsp;conte&amp;uacute;do&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Teste&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2022&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Geral&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;Ol&amp;aacute;&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Este&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;eacute;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;meu&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;primeiro&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pelican&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Isto &amp;eacute; o suficiente para um post com Pelican. T&amp;iacute;tulo, data, categoria e o conte&amp;uacute;do em&amp;nbsp;si.&lt;/p&gt;
&lt;p&gt;Agora vamos rodar um servidor de teste e ver o que nosso&amp;nbsp;blog.&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pelican -r -l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O resultado deve ser algo&amp;nbsp;assim:&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;---&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;AutoReload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Mode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Monitoring&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n n-Quoted"&gt;`content`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n n-Quoted"&gt;`theme`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n n-Quoted"&gt;`settings`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;---&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Serving&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;at&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Tap&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CTRL&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;stop&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Docutils&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;has&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;no&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;localization&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'pt'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'en'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;instead&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                                       &lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;91&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;Watched&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;does&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;exist&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;jcemelanda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;projetos&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;myblog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                     &lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;91&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modified&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="n"&gt;tings&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;generating&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Done&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Processed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;drafts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hidden&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hidden&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;draft&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.06&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Acesse o endere&amp;ccedil;o indicado &lt;code&gt;http://127.0.0.1:8000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot Pelican 001" src="/images/pelican-tut-001.png"/&gt;&lt;/p&gt;
&lt;p&gt;Esta deve ser a apar&amp;ecirc;ncia do seu&amp;nbsp;blog.&lt;/p&gt;
&lt;p&gt;Agora abra seu arquivo &lt;code&gt;pelicanconf.py&lt;/code&gt;. Seu conte&amp;uacute;do deve ser aproximadamente&amp;nbsp;este:&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;teste&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;
&lt;span class="nv"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;TESTE&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;
&lt;span class="nv"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;

&lt;span class="nv"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;content&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;
&lt;span class="nv"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;America/Sao_Paulo&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;

&lt;span class="nv"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;pt&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;

# &lt;span class="nv"&gt;Feed&lt;/span&gt; &lt;span class="nv"&gt;generation&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;usually&lt;/span&gt; &lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="nv"&gt;desired&lt;/span&gt; &lt;span class="nv"&gt;when&lt;/span&gt; &lt;span class="nv"&gt;developing&lt;/span&gt;
&lt;span class="nv"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;None&lt;/span&gt;
&lt;span class="nv"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;None&lt;/span&gt;
&lt;span class="nv"&gt;TRANSLATION_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;None&lt;/span&gt;
&lt;span class="nv"&gt;AUTHOR_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;None&lt;/span&gt;
&lt;span class="nv"&gt;AUTHOR_FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;None&lt;/span&gt;

# &lt;span class="nv"&gt;Blogroll&lt;/span&gt;
&lt;span class="nv"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Pelican&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;, &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://getpelican.com/&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,
        &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Python.org&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;, &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://www.python.org/&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,
        &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Jinja2&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;, &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://palletsprojects.com/p/jinja/&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,
        &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;You can modify those links in your config file&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;, &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;#&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,&lt;span class="ss"&gt;)&lt;/span&gt;

# &lt;span class="nv"&gt;Social&lt;/span&gt; &lt;span class="nv"&gt;widget&lt;/span&gt;
&lt;span class="nv"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;You can add links in your config file&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;, &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;#&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,
        &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Another social link&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;, &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;#&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;False&lt;/span&gt;

# &lt;span class="nv"&gt;Uncomment&lt;/span&gt; &lt;span class="nv"&gt;following&lt;/span&gt; &lt;span class="nv"&gt;line&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;want&lt;/span&gt; &lt;span class="nv"&gt;document&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;relative&lt;/span&gt; &lt;span class="nv"&gt;URLs&lt;/span&gt; &lt;span class="nv"&gt;when&lt;/span&gt; &lt;span class="nv"&gt;developing&lt;/span&gt;
#&lt;span class="nv"&gt;RELATIVE_URLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Este arquivo &amp;eacute; bem autoexplicativo. Aqui &amp;eacute; nele que mexemos para a maioria das configura&amp;ccedil;&amp;otilde;es do&amp;nbsp;Pelican.&lt;/p&gt;
&lt;p&gt;Finalmente, abra o &lt;code&gt;publishconf.py&lt;/code&gt;. Seu conte&amp;uacute;do deve ser aproximadamente&amp;nbsp;este:&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# This file is only used if you use `make publish` or&lt;/span&gt;
&lt;span class="c1"&gt;# explicitly specify it as your config file.&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;curdir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelicanconf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="c1"&gt;# If your site is available via HTTPS, make sure SITEURL begins with https://&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;
&lt;span class="n"&gt;RELATIVE_URLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;

&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'feeds/all.atom.xml'&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'feeds/&lt;/span&gt;&lt;span class="si"&gt;{slug}&lt;/span&gt;&lt;span class="s1"&gt;.atom.xml'&lt;/span&gt;

&lt;span class="n"&gt;DELETE_OUTPUT_DIRECTORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;

&lt;span class="c1"&gt;# Following items are often useful when publishing&lt;/span&gt;

&lt;span class="c1"&gt;#DISQUS_SITENAME = ""&lt;/span&gt;
&lt;span class="c1"&gt;#GOOGLE_ANALYTICS = ""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Veja que este arquivo importa de pelicanconf, logo, aqui voc&amp;ecirc; consegue sobrescrever configura&amp;ccedil;&amp;otilde;es, te permitindo ter uma configura&amp;ccedil;&amp;atilde;o para seu ambiente onde escreve os posts e outra para a efetiva publica&amp;ccedil;&amp;atilde;o do&amp;nbsp;site.&lt;/p&gt;
&lt;p&gt;No momento, estas informa&amp;ccedil;&amp;otilde;es s&amp;atilde;o suficientes para prosseguirmos, ent&amp;atilde;o, n&amp;atilde;o perca a pr&amp;oacute;xima parte deste tutorial onde vamos falar sobre Github pages para depois juntarmos as duas coisas&amp;nbsp;:D&lt;/p&gt;
&lt;p&gt;Espero que tenham gostado e n&amp;atilde;o esque&amp;ccedil;am de deixar seuas opini&amp;otilde;es e d&amp;uacute;vidas nos&amp;nbsp;coment&amp;aacute;rios!&lt;/p&gt;
&lt;p&gt;At&amp;eacute; o pr&amp;oacute;ximo&amp;nbsp;post!&lt;/p&gt;</content><category term="Tutoriais"></category><category term="Tutorial"></category><category term="Pelican"></category><category term="Github Pages"></category><category term="CircleCI"></category></entry><entry><title>Python 101 - Segunda Parte</title><link href="http://programeempython.com.br/python-101-parte-2.html" rel="alternate"></link><published>2022-07-29T12:06:00+02:00</published><updated>2022-07-29T12:06:00+02:00</updated><author><name>Julio Melanda</name></author><id>tag:programeempython.com.br,2022-07-29:/python-101-parte-2.html</id><summary type="html">&lt;p&gt;Ol&amp;aacute;!&lt;/p&gt;
&lt;p&gt;Agora que j&amp;aacute; temos o Python instalado e j&amp;aacute; conhecemos a sua interface interativa, vamos aprender um pouco sobre os comandos mais b&amp;aacute;sicos da&amp;nbsp;linguagem!&lt;/p&gt;
&lt;p&gt;Antes de continuarmos, se n&amp;atilde;o leu o post anterior, acesse&amp;nbsp;aqui:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://programeempython.com.br/python-101-parte-1.html"&gt;Python 101 - Primeira&amp;nbsp;Parte&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Como visto, no shell Python, temos dois&amp;nbsp;cursores:&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ao …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ol&amp;aacute;!&lt;/p&gt;
&lt;p&gt;Agora que j&amp;aacute; temos o Python instalado e j&amp;aacute; conhecemos a sua interface interativa, vamos aprender um pouco sobre os comandos mais b&amp;aacute;sicos da&amp;nbsp;linguagem!&lt;/p&gt;
&lt;p&gt;Antes de continuarmos, se n&amp;atilde;o leu o post anterior, acesse&amp;nbsp;aqui:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://programeempython.com.br/python-101-parte-1.html"&gt;Python 101 - Primeira&amp;nbsp;Parte&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Como visto, no shell Python, temos dois&amp;nbsp;cursores:&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ao fazermos um if, estrutura condicional que ser&amp;aacute; explicada em mais detalhes num pr&amp;oacute;ximo post, temos o seguinte no&amp;nbsp;console:&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;:
...     &lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;x &amp;eacute; menor que 1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
... 
&lt;span class="nv"&gt;x&lt;/span&gt; &amp;eacute; &lt;span class="nv"&gt;menor&lt;/span&gt; &lt;span class="nv"&gt;que&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Agora, a explica&amp;ccedil;&amp;atilde;o&amp;nbsp;=]&lt;/p&gt;
&lt;p&gt;Na primeira linha, dizemos que a vari&amp;aacute;vel x cont&amp;eacute;m o valor 0;
Em seguida, comparamos o valor contido em x com 1. Ao terminarmos um comando com : o interpretador entende que este &amp;eacute; um comando que n&amp;atilde;o acabou no final daquela linha, e que &amp;eacute; composto por mais comandos, ent&amp;atilde;o surge o cursor secund&amp;aacute;rio &lt;code&gt;...&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ent&amp;atilde;o, muitos programadores habituados com outras linguagens devem se perguntar onde est&amp;atilde;o as chaves pra determinar o&amp;nbsp;bloco.&lt;/p&gt;
&lt;p&gt;No Python, os blocos s&amp;atilde;o determinados pela identa&amp;ccedil;&amp;atilde;o (ou edenta&amp;ccedil;&amp;atilde;o, ou endenta&amp;ccedil;&amp;atilde;o&amp;hellip; j&amp;aacute; vi v&amp;aacute;rias formas da&amp;nbsp;palavra).&lt;/p&gt;
&lt;p&gt;As linhas que est&amp;atilde;o dentro do if, ou seja o que deve ser executado caso a compara&amp;ccedil;&amp;atilde;o seja verdadeira deve estar&amp;nbsp;identado.&lt;/p&gt;
&lt;p&gt;Em geral &amp;eacute; uma conven&amp;ccedil;&amp;atilde;o, no Python, usarmos 4 espa&amp;ccedil;os para a&amp;nbsp;identa&amp;ccedil;&amp;atilde;o.&lt;/p&gt;
&lt;p&gt;O &lt;code&gt;print("x &amp;eacute; menor que 1")&lt;/code&gt; &amp;eacute; o comando que deve ser executado se a compara&amp;ccedil;&amp;atilde;o &lt;code&gt;x &amp;lt; 1&lt;/code&gt; for verdadeira. Assim, esta linha est&amp;aacute; identada, e o interpretador sabe que s&amp;oacute; deve execut&amp;aacute;-la caso &lt;em&gt;x&lt;/em&gt; seja menor que &lt;em&gt;1&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Quando voc&amp;ecirc; d&amp;aacute; um &lt;code&gt;ENTER&lt;/code&gt; no final desta linha, o interpretador te mostra novamente o cursor secund&amp;aacute;rio, pois um &lt;code&gt;if&lt;/code&gt; pode ter v&amp;aacute;rios comandos ali dentro. Como veremos mais adiante a execu&amp;ccedil;&amp;atilde;o de um programa todo pode estar dentro de um &lt;strong&gt;if&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Assim, s&amp;oacute; depois de um segundo &lt;code&gt;ENTER&lt;/code&gt; &amp;eacute; que o interpretador executa o comando e mostra o&amp;nbsp;resultado.&lt;/p&gt;
&lt;p&gt;Ent&amp;atilde;o,&amp;nbsp;recapitulando:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blocos em Python s&amp;atilde;o definidos pela&amp;nbsp;identa&amp;ccedil;&amp;atilde;o&lt;/li&gt;
&lt;li&gt;A identa&amp;ccedil;&amp;atilde;o deve seguir um padr&amp;atilde;o, preferencialmente em todos os&amp;nbsp;programas&lt;/li&gt;
&lt;li&gt;&amp;Eacute; conven&amp;ccedil;&amp;atilde;o usar 4 espa&amp;ccedil;os para&amp;nbsp;identa&amp;ccedil;&amp;atilde;o&lt;/li&gt;
&lt;li&gt;No interpretador, blocos identados s&amp;atilde;o precedidos do cursos secund&amp;aacute;rio&amp;nbsp;&amp;hellip;&lt;/li&gt;
&lt;li&gt;Um bloco indica um trecho de c&amp;oacute;digo que est&amp;aacute; dentro de outro&amp;nbsp;comando&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Por enquanto &amp;eacute;&amp;nbsp;s&amp;oacute;!&lt;/p&gt;
&lt;p&gt;No pr&amp;oacute;ximo post aproveitamos a deixa, e falamos sobre estruturas condicionais em&amp;nbsp;Python!&lt;/p&gt;
&lt;p&gt;N&amp;atilde;o deixe de deixar d&amp;uacute;vidas e opini&amp;otilde;es nos coment&amp;aacute;rios&amp;nbsp;abaixo!&lt;/p&gt;
&lt;p&gt;At&amp;eacute; o pr&amp;oacute;ximo&amp;nbsp;post!&lt;/p&gt;</content><category term="Tutoriais"></category><category term="Tutorial"></category><category term="Python 101"></category></entry><entry><title>Python 101 - Primeira Parte</title><link href="http://programeempython.com.br/python-101-parte-1.html" rel="alternate"></link><published>2022-07-29T01:06:00+02:00</published><updated>2022-07-31T01:44:00+02:00</updated><author><name>Julio Melanda</name></author><id>tag:programeempython.com.br,2022-07-29:/python-101-parte-1.html</id><summary type="html">&lt;p&gt;Bom, um blog com o nome Programe em Python não pode ficar sem um tutorial básico de Python,&amp;nbsp;né?&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bom, um blog com o nome Programe em Python n&amp;atilde;o pode ficar sem um tutorial b&amp;aacute;sico de Python,&amp;nbsp;n&amp;eacute;?&lt;/p&gt;
&lt;p&gt;Antes de mais nada, se voc&amp;ecirc; usa Linux ou MacOS voc&amp;ecirc; provavelmente j&amp;aacute; tem o Python ent&amp;atilde;o voc&amp;ecirc; est&amp;aacute; com&amp;nbsp;sorte.&lt;/p&gt;
&lt;p&gt;No windows, v&amp;aacute; &amp;agrave; &lt;a href="https://www.python.org/downloads/"&gt;p&amp;aacute;gina de downloads do Python&lt;/a&gt; e baixe dali a vers&amp;atilde;o mais&amp;nbsp;recente.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Download Python" src="/images/download-python.png"/&gt;&lt;/p&gt;
&lt;p&gt;Quando terminar o download, execute o instalador e siga as instru&amp;ccedil;&amp;otilde;es de&amp;nbsp;instala&amp;ccedil;&amp;atilde;o.&lt;/p&gt;
&lt;p&gt;Lembre-se de marcar a op&amp;ccedil;&amp;atilde;o para inserir Python nos caminhos do sistema (&lt;em&gt;Add Python to &lt;span class="caps"&gt;PATH&lt;/span&gt;&lt;/em&gt;), pois isto vai facilitar muito a sua&amp;nbsp;vida.&lt;/p&gt;
&lt;p&gt;Quando o Python estiver finalmente instalado, numa janela de linha de comando, (&lt;span class="caps"&gt;CMD&lt;/span&gt; ou powershell no Windows) digite Python e voc&amp;ecirc; deve ver algo semelhante a&amp;nbsp;isto.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Terminal Python" src="/images/python-terminal.png"/&gt;&lt;/p&gt;
&lt;p&gt;Veja que na primeira linha voc&amp;ecirc; consegue ver qual a vers&amp;atilde;o do Python, e na &amp;uacute;ltima linha h&amp;aacute; um prompt esperando pelos seus&amp;nbsp;comandos. &lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Este prompt ser&amp;aacute; usado neste blog sempre para denotar que devemos escrever c&amp;oacute;digo no console do&amp;nbsp;Python.&lt;/p&gt;
&lt;p&gt;Fa&amp;ccedil;a um teste. Digite, seguido de &lt;code&gt;ENTER&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; print('Ol&amp;aacute; Mundo!')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O resultado deve ser algo&amp;nbsp;assim:&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; print('Ol&amp;aacute; Mundo!')
Ol&amp;aacute; Mundo!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Isto significa que o console do Python j&amp;aacute; te retorna as respostas para os comando logo em seguida de voc&amp;ecirc; execut&amp;aacute;-los. Veja por&amp;nbsp;exemplo:&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; 23*256/98+3
63.08163265306123
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finalmente, quando formos executar c&amp;oacute;digos com blocos, como &lt;code&gt;if&lt;/code&gt; por exemplo, ser&amp;aacute;&amp;nbsp;assim:&lt;/p&gt;
&lt;div class="highlight not-prose"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;True&lt;/span&gt;:
...     &lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;&amp;Eacute; verdade!&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
...
&amp;Eacute; &lt;span class="nv"&gt;verdade&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Assim, note que os 3 pontos &lt;code&gt;...&lt;/code&gt; s&amp;atilde;o indicadores de bloco de c&amp;oacute;digo no terminal do Python, ou seja, indicam que um comando iniciado acima ainda n&amp;atilde;o foi terminado. Desta forma, precisamos inserir uma linha em branco para o Python perceber que finalizamos aquele comando e ele pode ent&amp;atilde;o&amp;nbsp;execut&amp;aacute;-lo.&lt;/p&gt;
&lt;p&gt;Acho que este &amp;eacute; um bom momento para finalizarmos esta primeira parte do tutorial&amp;nbsp;:D&lt;/p&gt;
&lt;p&gt;N&amp;atilde;o deixem de &lt;strong&gt;comentar&lt;/strong&gt; abaixo com sua opini&amp;atilde;o e&amp;nbsp;d&amp;uacute;vidas!&lt;/p&gt;
&lt;p&gt;At&amp;eacute; o pr&amp;oacute;ximo&amp;nbsp;post!&lt;/p&gt;</content><category term="Tutoriais"></category><category term="Tutorial"></category><category term="Python 101"></category></entry></feed>